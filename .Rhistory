###### richness plots
rich_plots = list()
rich_relationships = c("linear","linear", "none", "none")
model_plot(data = s_comm_data %>% mutate(fire_frequency = log(fire_frequency)),
x = all_explanatory[i],
y = "richness",
model = gls_rich1,
relationship = rich_relationships[i],
x_label = all_xlabels[i],
y_label = "ln(N species per plot)")
model_plot(data = s_comm_data %>% mutate(richness = log(richness)),
x = all_explanatory[i],
y = "richness",
model = gls_rich1,
relationship = rich_relationships[i],
x_label = all_xlabels[i],
y_label = "ln(N species per plot)")
check_resid(model = gls_rich1)
###### richness plots
rich_plots = list()
rich_relationships = c("linear","linear", "none", "none")
### plots
for(i in 1:length(all_explanatory) ){
rich_plots[[i]] = model_plot(data = s_comm_data %>% mutate(richness = log(richness)),
x = all_explanatory[i],
y = "richness",
model = gls_rich1,
relationship = rich_relationships[i],
x_label = all_xlabels[i],
y_label = "ln(N species per plot)")
}
ggarrange(rich_plots[[1]], rich_plots[[2]], rich_plots[[3]], rich_plots[[4]],
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
tiff("plots/richness_plots.tiff", units="cm", width=14, height=14, res=600)
ggarrange(rich_plots[[1]], rich_plots[[2]], rich_plots[[3]], rich_plots[[4]],
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
dev.off()
### species diversity model
gls_fish1 = gls(data = s_comm_data,
log(fisher) ~ fire_frequency + seasonal_precipitation + soil_PC1 + soil_PC2,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
### model summary
summary(gls_fish1)
model_plot(data = s_comm_data %>% mutate(fisher = log(fisher)),
x = all_explanatory[i],
y = "fisher",
model = gls_fish1,
relationship = fish_relationships[i],
x_label = all_xlabels[i],
y_label = "ln(Fisher's alpha)")
###### richness plots
fish_plots = list()
fish_relationships = c("linear","linear", "none", "none")
model_plot(data = s_comm_data %>% mutate(fisher = log(fisher)),
x = all_explanatory[i],
y = "fisher",
model = gls_fish1,
relationship = fish_relationships[i],
x_label = all_xlabels[i],
y_label = "ln(Fisher's alpha)")
### plots
for(i in 1:length(all_explanatory) ){
fish_plots[[i]] = model_plot(data = s_comm_data %>% mutate(fisher = log(fisher)),
x = all_explanatory[i],
y = "fisher",
model = gls_fish1,
relationship = fish_relationships[i],
x_label = all_xlabels[i],
y_label = "ln(Fisher's alpha)")
}
ggarrange(fish_plots[[1]], fish_plots[[2]], fish_plots[[3]], fish_plots[[4]],
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
tiff("plots/fisher_plots.tiff", units="cm", width=14, height=14, res=600)
ggarrange(fish_plots[[1]], fish_plots[[2]], fish_plots[[3]], fish_plots[[4]],
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
dev.off()
ggplot(data = comm_data) +
geom_point(aes(
x = fire_frequency,
y = floristic_PCo1
)
)
ggplot(data = comm_data) +
geom_point(aes(
x = fire_frequency,
y = exp(floristic_PCo1)
)
)
ggplot(data = comm_data) +
geom_point(aes(
x = fire_frequency,
y = floristic_PCo2
)
)
ggplot(data = comm_data) +
geom_point(aes(
x = fire_frequency,
y = exp(floristic_PCo2)
)
)
ggplot(data = comm_data) +
geom_point(aes(
x = fire_frequency,
y = floristic_PCo2
)
)
ggplot(data = comm_data) +
geom_point(aes(
x = scale(fire_frequency),
y = floristic_PCo2
)
)
ggplot(data = comm_data) +
geom_point(aes(
x = scale(fire_frequency),
y = sqrt(floristic_PCo2)
)
)
ggplot(data = comm_data) +
geom_point(aes(
x = scale(fire_frequency),
y = sqrt(floristic_PCo1)
)
)
ggplot(data = comm_data) +
geom_point(aes(
x = scale(fire_frequency),
y = log(floristic_PCo1)
)
)
ggplot(data = comm_data) +
geom_point(aes(
x = scale(fire_frequency),
y = exp(floristic_PCo1)
)
)
ggplot(data = comm_data) +
geom_point(aes(
x = scale(fire_frequency),
y = floristic_PCo1
)
)
hist( log(comm_data$floristic_PCo1 + 1 ) )
hist( log(comm_data$floristic_PCo1) )
### species compostion model
gls_comp1 = gls(data = s_comm_data,
floristic_PCo1 ~ fire_frequency + seasonal_precipitation + soil_PC1 + soil_PC2,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
summary(gls_comp1)
plot(gls_comp1)
check_resid(model = gls_comp1)
### species compostion model
gls_comp1 = gls(data = s_comm_data,
exp(floristic_PCo1) ~ fire_frequency + seasonal_precipitation + soil_PC1 + soil_PC2,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
summary(gls_comp1)
plot(gls_comp1)
check_resid(model = gls_comp1)
### species compostion model
gls_comp1 = gls(data = s_comm_data,
log(floristic_PCo1) ~ fire_frequency + seasonal_precipitation + soil_PC1 + soil_PC2,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
summary(gls_comp1)
plot(gls_comp1)
check_resid(model = gls_comp1)
hist( comm_data$floristic_PCo1 )
### species compostion model
gls_comp1 = gls(data = s_comm_data,
log(floristic_PCo1+ min(floristic_PCo1)) ~ fire_frequency + seasonal_precipitation + soil_PC1 + soil_PC2,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
### species compostion model
gls_comp1 = gls(data = s_comm_data,
log(floristic_PCo1 - min(floristic_PCo1)) ~ fire_frequency + seasonal_precipitation + soil_PC1 + soil_PC2,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
summary(gls_comp1)
### species compostion model
gls_comp1 = gls(data = s_comm_data,
log(floristic_PCo1 - min(floristic_PCo1)) ~ fire_frequency + seasonal_precipitation + soil_PC1 + soil_PC2,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
hist( comm_data$floristic_PCo1^(1/3) )
### species compostion model
gls_comp1 = gls(data = s_comm_data,
floristic_PCo1^(1/3) ~ fire_frequency + seasonal_precipitation + soil_PC1 + soil_PC2,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
### species compostion model
gls_comp1 = gls(data = s_comm_data,
(floristic_PCo1^(1/3)) ~ fire_frequency + seasonal_precipitation + soil_PC1 + soil_PC2,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
hist( comm_data$floristic_PCo1^(1/3) )
min(comm_data$floristic_PCo1)
comm_data$floristic_PCo1 - min(comm_data$floristic_PCo1)
hist( comm_data$floristic_PCo1 - min(comm_data$floristic_PCo1) )
###### SECOND AXIS
hist(comm_data$floristic_PCo2)
### species compostion model 2
gls_comp2 = gls(data = s_comm_data,
floristic_PCo2 ~ fire_frequency + seasonal_precipitation + soil_PC1 + soil_PC2,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
summary(gls_comp2)
plot(gls_comp2)
check_resid(model = gls_comp2)
summary(gls_comp2)
ggplot(data = comm_data) +
geom_point(aes(
x = scale(fire_frequency),
y = floristic_PCo2
)
)
ggplot(data = comm_data) +
geom_point(aes(
x = scale(fire_frequency),
y = exp(floristic_PCo2)
)
)
ggplot(data = comm_data) +
geom_point(aes(
x = scale(fire_frequency),
y = log(floristic_PCo2)
)
)
ggplot(data = comm_data) +
geom_point(aes(
x = scale(fire_frequency),
y = sqrt(floristic_PCo2)
)
)
ggplot(data = comm_data) +
geom_point(aes(
x = scale(fire_frequency),
y = floristic_PCo2
)
)
ggplot(data = subset(s_comm_data, fire_frequency < 20 )  ) +
geom_point(aes(
x = fire_frequency,
y = floristic_PCo2
)
)
ggplot(data = subset(s_comm_data, fire_frequency < 4 )  ) +
geom_point(aes(
x = fire_frequency,
y = floristic_PCo2
)
)
###### composition2 plots
comp2_plots = list()
comp2_relationships = c("linear","none", "none", "none")
model_plot(data = s_comm_data,
x = all_explanatory[i],
y = "floristic_PCo2",
model = gls_comp2,
relationship = comp2_relationships[i],
x_label = all_xlabels[i],
y_label = "Floristic PCo1")
###### composition2 plots
comp2_plots = list()
comp2_relationships = c("linear","none", "none", "none")
### plots
for(i in 1:length(all_explanatory) ){
comp2_plots[[i]] = model_plot(data = s_comm_data,
x = all_explanatory[i],
y = "floristic_PCo2",
model = gls_comp2,
relationship = comp2_relationships[i],
x_label = all_xlabels[i],
y_label = "Floristic PCo1")
}
ggarrange(comp2_plots[[1]], comp2_plots[[2]], comp2_plots[[3]], comp2_plots[[4]],
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
###### SECOND AXIS
hist(comm_data$floristic_PCo2)
### species compostion model 2
gls_comp2 = gls(data = s_comm_data %>% mutate(floristic_PCo2 = floristic_PCo2 - min(floristic_PCo2)),
floristic_PCo2 ~ fire_frequency + seasonal_precipitation + soil_PC1 + soil_PC2,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
### summary model
summary(gls_comp2)
plot(gls_comp2)
check_resid(model = gls_comp2)
comp2_plots[[i]] = model_plot(data = s_comm_data %>% mutate(floristic_PCo2 = floristic_PCo2 - min(floristic_PCo2)),
x = all_explanatory[i],
y = "floristic_PCo2",
model = gls_comp2,
relationship = comp2_relationships[i],
x_label = all_xlabels[i],
y_label = "Floristic PCo2")
model_plot(data = s_comm_data %>% mutate(floristic_PCo2 = floristic_PCo2 - min(floristic_PCo2)),
x = all_explanatory[i],
y = "floristic_PCo2",
model = gls_comp2,
relationship = comp2_relationships[i],
x_label = all_xlabels[i],
y_label = "Floristic PCo2")
###### composition2 plots
comp2_plots = list()
comp2_relationships = c("linear","none", "none", "none")
### plots
for(i in 1:length(all_explanatory) ){
comp2_plots[[i]] = model_plot(data = s_comm_data %>% mutate(floristic_PCo2 = floristic_PCo2 - min(floristic_PCo2)),
x = all_explanatory[i],
y = "floristic_PCo2",
model = gls_comp2,
relationship = comp2_relationships[i],
x_label = all_xlabels[i],
y_label = "Floristic PCo2")
}
ggarrange(comp2_plots[[1]], comp2_plots[[2]], comp2_plots[[3]], comp2_plots[[4]],
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
### species compostion model 2
gls_comp2 = gls(data = s_comm_data ,
floristic_PCo2 ~ poly(fire_frequency + seasonal_precipitation + soil_PC1 + soil_PC2,2),
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
### summary model
summary(gls_comp2)
### species compostion model 2
gls_comp2 = gls(data = s_comm_data ,
floristic_PCo2 ~ poly(fire_frequency,2) ,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
### summary model
summary(gls_comp2)
### species compostion model 2
gls_comp2 = gls(data = s_comm_data ,
floristic_PCo2 ~ poly(seasonal_precipitation,2) ,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
### summary model
summary(gls_comp2)
plot(gls_comp2)
check_resid(model = gls_comp2)
### summary model
summary(gls_comp2)
ggplot(data = subset(s_comm_data, fire_frequency < 4 )  ) +
ggplot(data = s_comm_data  ) +
geom_point(aes(x = seasonal_precipitation,
y = floristic_PCo2
)
) +
geom_line(aes(x = seasonal_precipitation,
y = c(-0.0019367 + 0.4887561*seasonal_precipitation + -1.2606081*(seasonal_precipitation^2) )
)
)
ggplot(data = s_comm_data  ) +
geom_point(aes(x = seasonal_precipitation,
y = floristic_PCo2
)
)
ggplot(data = s_comm_data  ) +
geom_point(aes(x = seasonal_precipitation,
y = floristic_PCo2
)
) +
geom_line(aes(x = seasonal_precipitation,
y = c(-0.0019367 + -1.2606081*seasonal_precipitation + 0.4887561*(seasonal_precipitation^2) )
)
)
ggplot(data = s_comm_data  ) +
geom_point(aes(x = seasonal_precipitation,
y = floristic_PCo2
)
) +
geom_line(aes(x = seasonal_precipitation,
y = c(-0.0019367 - 0.4887561*seasonal_precipitation + 1.2606081*(seasonal_precipitation^2) )
)
)
ggplot(data = s_comm_data  ) +
geom_point(aes(x = seasonal_precipitation,
y = floristic_PCo2
)
) +
geom_line(aes(x = seasonal_precipitation,
y = c(-0.0019367 + 0.4887561*seasonal_precipitation - 1.2606081*(seasonal_precipitation^2) )
)
)
### species compostion model 2
gls_comp2 = gls(data = s_comm_data ,
floristic_PCo2 ~ poly(fire_frequency,2) ,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
### summary model
summary(gls_comp2)
ggplot(data = s_comm_data  ) +
geom_point(aes(x = fire_frequency,
y = floristic_PCo2
)
) +
geom_line(aes(x = fire_frequency,
y = c(0.0119023 -(0.4887561*fire_frequency)  -(0.4860231*(fire_frequency^2)) )
)
)
ggplot(data = s_comm_data  ) +
geom_point(aes(x = fire_frequency,
y = floristic_PCo2
)
)
### species compostion model 2
gls_comp2 = gls(data = s_comm_data ,
floristic_PCo2 ~ fire_frequency,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
### summary model
summary(gls_comp2)
plot(gls_comp2)
check_resid(model = gls_comp2)
require("mvpart")
### maintained packages
if (!require("tidyverse")) install.packages("tidyverse"); require("tidyverse")
if (!require("ggplot2")) install.packages("ggplot2"); library("ggplot2")
if (!require("ggpubr")) install.packages("ggpubr"); library("ggpubr")
if (!require("nlme")) install.packages("nlme"); library("nlme")
if (!require("vegan")) install.packages("vegan"); library("vegan")
### my functions
source("scripts/function_model_plot.R")
### environmental data
comm_data = read.csv("0_data/comm_data.csv", sep=",", h=T)
head(comm_data)
### species data
ind_data = read.csv("0_data/ind_data.csv", sep=",", h=T, stringsAsFactors = T)
head(ind_data)
### processing individual data
ind_data  =  ind_data %>%
filter(!is.na(sp)) %>%
unite("plot_id", site, plot, sep="_", remove = FALSE)
### processing community data
comm_data  =  comm_data %>%
unite("plot_id", site, plot, sep="_", remove = FALSE)
### transforming fire
comm_data = comm_data %>%
mutate(fire_frequency = case_when(
fire_frequency == 0 ~ 0.1,
TRUE                ~ fire_frequency
)
) %>%
mutate(trans_fire = log(fire_frequency) )
### scaled predictors
s_comm_data = comm_data %>%
mutate(
fire_frequency = scale(fire_frequency),
seasonal_precipitation = scale(seasonal_precipitation),
soil_PC1 = scale(soil_PC1),
soil_PC2 = scale(soil_PC2)
)
### all explanatory vars
all_explanatory = c("fire_frequency",
"seasonal_precipitation",
"soil_PC1",
"soil_PC2"
)
### all x-axis labels
all_xlabels = c("Fire frequency",
"Seasonal precipitation",
"Soil PC1",
"Soil PC2"
)
### check residual
check_resid = function(model){
N = model$dims$N
resid_n = resid(model)[1:N]
shapiro.test(resid_n)
}
### gls model
gls_fire1 = gls(
data = s_comm_data,
trans_fire ~ seasonal_precipitation + soil_PC1 + soil_PC2,
method = "ML",
correlation = corLin(form = ~ longitude + latitude))
summary(gls_fire1)
plot(gls_fire1)
check_resid(model = gls_fire1)
##### species richeness
hist(log(comm_data$richness) )
### species richness model
gls_rich1 = gls(
data = s_comm_data,
log(richness) ~ fire_frequency + seasonal_precipitation + soil_PC1 + soil_PC2,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
### model summary
summary(gls_rich1)
plot(gls_rich1)
check_resid(model = gls_rich1)
### model summary
summary(gls_rich1)
### species diversity model
gls_fish1 = gls(data = s_comm_data,
log(fisher) ~ fire_frequency + seasonal_precipitation + soil_PC1 + soil_PC2,
method = "REML",
correlation = corLin(form = ~ longitude + latitude))
### model summary
summary(gls_fish1)
plot(gls_fish1)
check_resid(model = gls_fish1)
### model summary
summary(gls_fish1)
